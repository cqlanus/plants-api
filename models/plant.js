'use strict';
const {
    Model
} = require('sequelize');
module.exports = (sequelize, DataTypes) => {
    class Plant extends Model {
        /**
         * Helper method for defining associations.
         * This method is not a part of Sequelize lifecycle.
         * The `models/index` file will call this method automatically.
         */
        static associate(models) {
            // define association here
        }
    }
    Plant.init({
        id: {
            allowNull: false,
            autoIncrement: true,
            primaryKey: true,
            type: DataTypes.INTEGER
        },
        'Accepted Symbol': DataTypes.STRING(1234),
        'Synonym Symbol': DataTypes.STRING(1234),
        'Symbol': DataTypes.STRING(1234),
        'Scientific Name': DataTypes.STRING(1234),
        'Hybrid Genus Indicator': DataTypes.STRING(1234),
        'Hybrid Species Indicator': DataTypes.STRING(1234),
        'Species': DataTypes.STRING(1234),
        'Subspecies Prefix': DataTypes.STRING(1234),
        'Hybrid Subspecies Indicator': DataTypes.STRING(1234),
        'Subspecies': DataTypes.STRING(1234),
        'Variety Prefix': DataTypes.STRING(1234),
        'Hybrid Variety Indicator': DataTypes.STRING(1234),
        'Variety': DataTypes.STRING(1234),
        'Subvariety Prefix': DataTypes.STRING(1234),
        'Subvariety': DataTypes.STRING(1234),
        'Forma Prefix': DataTypes.STRING(1234),
        'Forma': DataTypes.STRING(1234),
        'Genera/Binomial Author': DataTypes.STRING(1234),
        'Trinomial Author': DataTypes.STRING(1234),
        'Quadranomial Author': DataTypes.STRING(1234),
        'Questionable Taxon Indicator': DataTypes.STRING(1234),
        'Parents': DataTypes.STRING(1234),
        'Common Name': DataTypes.STRING(1234),
        'State and Province': DataTypes.STRING(1234),
        'Category': DataTypes.STRING(1234),
        'Genus': DataTypes.STRING(1234),
        'Family': DataTypes.STRING(1234),
        'Family Symbol': DataTypes.STRING(1234),
        'Family Common Name': DataTypes.STRING(1234),
        'Order': DataTypes.STRING(1234),
        'SubClass': DataTypes.STRING(1234),
        'Class': DataTypes.STRING(1234),
        'SubDivision': DataTypes.STRING(1234),
        'Division': DataTypes.STRING(1234),
        'SuperDivision': DataTypes.STRING(1234),
        'SubKingdom': DataTypes.STRING(1234),
        'Kingdom': DataTypes.STRING(1234),
        'ITIS TSN': DataTypes.STRING(1234),
        'Duration': DataTypes.STRING(1234),
        'Growth Habit': DataTypes.STRING(1234),
        'Native Status': DataTypes.STRING(1234),
        'Federal Noxious Status': DataTypes.STRING(1234),
        'Federal Noxious Common Name': DataTypes.STRING(1234),
        'State Noxious Status': DataTypes.STRING(1234),
        'State Noxious Common Name': DataTypes.STRING(1234),
        'Invasive': DataTypes.STRING(1234),
        'Federal T/E Status': DataTypes.STRING(1234),
        'State T/E Status': DataTypes.STRING(1234),
        'State T/E Common Name': DataTypes.STRING(1234),
        'National Wetland Indicator Status': DataTypes.STRING(1234),
        'Regional Wetland Indicator Status': DataTypes.STRING(1234),
        'Image Gallery': DataTypes.STRING(1234),
        'Fact Sheets': DataTypes.STRING(1234),
        'Plant Guides': DataTypes.STRING(1234),
        'Characteristics Data': DataTypes.STRING(1234),
        'Cultivar Name': DataTypes.STRING(1234),
        'Active Growth Period': DataTypes.STRING(1234),
        'After Harvest Regrowth Rate': DataTypes.STRING(1234),
        'Bloat': DataTypes.STRING(1234),
        'C:N Ratio': DataTypes.STRING(1234),
        'Coppice Potential': DataTypes.STRING(1234),
        'Fall Conspicuous': DataTypes.STRING(1234),
        'Fire Resistance': DataTypes.STRING(1234),
        'Flower Color': DataTypes.STRING(1234),
        'Flower Conspicuous': DataTypes.STRING(1234),
        'Foliage Color': DataTypes.STRING(1234),
        'Foliage Porosity Summer': DataTypes.STRING(1234),
        'Foliage Porosity Winter': DataTypes.STRING(1234),
        'Foliage Texture': DataTypes.STRING(1234),
        'Fruit Color': DataTypes.STRING(1234),
        'Fruit Conspicuous': DataTypes.STRING(1234),
        'Growth Form': DataTypes.STRING(1234),
        'Growth Rate': DataTypes.STRING(1234),
        'Height at Base Age, Maximum (feet)': DataTypes.FLOAT,
        'Height, Mature (feet)': DataTypes.FLOAT,
        'Known Allelopath': DataTypes.STRING(1234),
        'Leaf Retention': DataTypes.STRING(1234),
        'Lifespan': DataTypes.STRING(1234),
        'Low Growing Grass': DataTypes.STRING(1234),
        'Nitrogen Fixation': DataTypes.STRING(1234),
        'Resprout Ability': DataTypes.STRING(1234),
        'Shape and Orientation': DataTypes.STRING(1234),
        'Toxicity': DataTypes.STRING(1234),
        'Adapted to Coarse Textured Soils': DataTypes.STRING(1234),
        'Adapted to Medium Textured Soils': DataTypes.STRING(1234),
        'Adapted to Fine Textured Soils': DataTypes.STRING(1234),
        'Anaerobic Tolerance': DataTypes.STRING(1234),
        'CaCO<SUB>3</SUB> Tolerance': DataTypes.STRING(1234),
        'Cold Stratification Required': DataTypes.STRING(1234),
        'Drought Tolerance': DataTypes.STRING(1234),
        'Fertility Requirement': DataTypes.STRING(1234),
        'Fire Tolerance': DataTypes.STRING(1234),
        'Frost Free Days, Minimum': DataTypes.FLOAT,
        'Hedge Tolerance': DataTypes.STRING(1234),
        'Moisture Use': DataTypes.STRING(1234),
        'pH (Minimum)': DataTypes.FLOAT,
        'pH (Maximum)': DataTypes.FLOAT,
        'Planting Density per Acre, Minimum': DataTypes.FLOAT,
        'Planting Density per Acre, Maximum': DataTypes.FLOAT,
        'Precipitation (Minimum)': DataTypes.FLOAT,
        'Precipitation (Maximum)': DataTypes.FLOAT,
        'Root Depth, Minimum (inches)': DataTypes.STRING(1234),
        'Salinity Tolerance': DataTypes.STRING(1234),
        'Shade Tolerance': DataTypes.STRING(1234),
        'Temperature, Minimum (Â°F)': DataTypes.FLOAT,
        'Bloom Period': DataTypes.STRING(1234),
        'Commercial Availability': DataTypes.STRING(1234),
        'Fruit/Seed Abundance': DataTypes.STRING(1234),
        'Fruit/Seed Period Begin': DataTypes.STRING(1234),
        'Fruit/Seed Period End': DataTypes.STRING(1234),
        'Fruit/Seed Persistence': DataTypes.STRING(1234),
        'Propogated by Bare Root': DataTypes.STRING(1234),
        'Propogated by Bulbs': DataTypes.STRING(1234),
        'Propogated by Container': DataTypes.STRING(1234),
        'Propogated by Corms': DataTypes.STRING(1234),
        'Propogated by Cuttings': DataTypes.STRING(1234),
        'Propogated by Seed': DataTypes.STRING(1234),
        'Propogated by Sod': DataTypes.STRING(1234),
        'Propogated by Sprigs': DataTypes.STRING(1234),
        'Propogated by Tubers': DataTypes.STRING(1234),
        'Seeds per Pound': DataTypes.FLOAT,
        'Seed Spread Rate': DataTypes.STRING(1234),
        'Seedling Vigor': DataTypes.STRING(1234),
        'Small Grain': DataTypes.STRING(1234),
        'Vegetative Spread Rate': DataTypes.STRING(1234),
        'Berry/Nut/Seed Product': DataTypes.STRING(1234),
        'Christmas Tree Product': DataTypes.STRING(1234),
        'Fodder Product': DataTypes.STRING(1234),
        'Fuelwood Product': DataTypes.STRING(1234),
        'Lumber Product': DataTypes.STRING(1234),
        'Naval Store Product': DataTypes.STRING(1234),
        'Nursery Stock Product': DataTypes.STRING(1234),
        'Palatable Browse Animal': DataTypes.STRING(1234),
        'Palatable Graze Animal': DataTypes.STRING(1234),
        'Palatable Human': DataTypes.STRING(1234),
        'Post Product': DataTypes.STRING(1234),
        'Protein Potential': DataTypes.STRING(1234),
        'Pulpwood Product': DataTypes.STRING(1234),
        'Veneer Product': DataTypes.STRING(1234),
        createdAt: {
            allowNull: false,
            type: DataTypes.DATE
        },
        updatedAt: {
            allowNull: false,
            type: DataTypes.DATE
        }
    }, {
            sequelize,
            modelName: 'Plant',
        });
    return Plant;
};
